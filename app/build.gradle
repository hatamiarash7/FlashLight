/*
 * Copyright (c) 2017 - All Rights Reserved - Arash Hatami
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "ir.hatamiarash.flashlight"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 2
        versionName "1.5"
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    return void;
}

dependencies {
    compile 'com.android.support:appcompat-v7:26.+'
    compile 'com.jakewharton:butterknife:8.8.1'
    compile 'com.squareup:otto:1.3.8'
    compile 'com.github.yukuku:ambilwarna:2.0.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    compile 'org.jetbrains:annotations-java5:15.0'
    compile 'co.ronash.android:pushe-base:1.3.4'
    compile 'com.google.android.gms:play-services-gcm:17.0.0'
}

def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))
    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

apply plugin: 'com.google.gms.google-services'